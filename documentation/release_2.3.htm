<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <title>Summary of changes in STIR release 2.3 (dated 4/05/2013)</title>
  </head>

  <body>
    <h1>Summary of changes in STIR release 2.3 (dated 04/05/2013)</h1>

<p>This update was mostly prepared by Kris Thielemans (Algorithms and Software Consulting Ltd). The FORE implementation was developed over many years with main authors
Matthias Egger, Claire Labb&eacute;, Oliver Nix, Kris Thielemans.
The SimSET updates were checked by Robert Harrison.</p>


<ul>

<h2> Summary for end users (also to be read by developers)</h2>
<h3>Important bug fixes</h3>
<ul>
<li>The routines to handle SimSET data did have some problems in the previous release,
but should work now. Check SimSET/README.txt for some information.
<ul>
<li><tt>run_SimSET.sh</tt> had a few crucial lines commented out.</li>
<li>corrected the case where scatter_parameter is 4|5|9|10 in <tt>conv_SimSET_projdata_to_STIR.sh</tt></li>
</ul>
</li>
</ul>

<h3>New functionality</h3>
<ul>
<li>Addition of the FORE algorithm.</li>
<li>Dynamic projection data can now be read from Interfile data. This means that the parametric
image estimation routines need less ECAT7 support (still required for images at present).
</li>
<li>Expanded the interface for using STIR from Python. This works now but
needs documentation. There's functions
to copy STIR arrays to <tt>numpy</tt> arrays, indexing STIR arrays with tuples, etc. To use this, you will need to get a recent version of SWIG and enable
the <tt>BUILD_SWIG_PYTHON</tt> option when using CMake.</li>
<li>Preliminary support for using STIR from Octave. However, this is
partially broken due to problems in SWIG for octave.</li>
</ul>

<h3>Changed functionality</h3>
<ul>
<li><tt>ProjMatrixByBinFromFile</tt> now assumes that if an LOR isn't found in the file, it's empty (in previous STIR versions, we called error())</li>
</ul>

<h3>Build system</h3>
<ul>
<li> 
Using <a href="http://www.cmake.org">CMake</a> is now recommended (see the wiki). Some options
such as shared libraries and SWIG support can only be enabled when using CMake.
</li>
<li>For the normal Makefiles, we now use the <tt>-Ofast</tt> option for gcc
if it supports it.
</li>
</ul>

<h3>Known problems</h3>
<ul>
<li>This release has a <strong>memory allocation problem when processing list mode data</strong>. Depending on your system, compiler,
bad luck, you might get wrong results. If you use list mode, please upgrade to STIR 2.4.</li>
<li>This release is known to fail when both MPI and shared libraries are enabled. You will see linking errors in all non_MPI executables.</li>
<li>On Windows, using shared libraries fails. We need to sort out dependencies between libraries to fix this.</li>
<li>The recon_test_pack routines fail with the MPI version. See the mailing list for a work-around.</li>
<li>ECAT6 is no longer supported</li>
<li>The interpolating back-projector still gives problems in the centre of the images
on some architectures/compiler/optimisation settings. We recommend to use the ray-tracing
matrix (with additional rays) instead.</li>
<li>When using Visual Studio (Express) with the provided solution files, there is a linking problem for some
utilities. It is recommended to use the new <tt>CMake</tt> files for building instead (see the wiki).</li>
<li>When using <code>GRAPHICS=X</code> (i.e. on Unix/Linux/MacOSX) the window displaying
the bitmaps is sometimes empty. This might depend on your X server settings.
This affects <tt>manip_image</tt>, <tt>manip_projdata</tt> and <tt>display_projdata</tt>. 
We have currently no work-around (aside from using <code>GRAPHICS=PGM</code> or
<tt>stir_write_pgm</tt>).
</li>
</ul>


<h3>Minor bug fixes</h3>
<ul>
<li>This update contains a few fixes for Visual C++ 2010 and 2012, e.g. in Debug mode and on 64bit systems, Intel C++ (adapt the makefile to use xiar when using -fast).</li>
<li>a few changes to the CMakeLists.txt files for cmake clarifying dependencies
between libraries. This makes shared libraries better suppported, but there are still circular dependencies. This doesn't seem to create trouble on most systems,
but makes shared libraries fail on some (e.g. msys on windows).</li>
<li><tt>test_Scanner.cxx</tt>:
declare <tt>ecat_model</tt> function in case it isn't in <tt>ecat_model.h</tt>
</li>
</ul>

<h3>Documentation changes</h3>
<ul>
<li>The Wiki expands more and more, so use it in addition to the provided PDFs.
</li>
 </ul>

<h3>recon_test_pack changes</h3>
<ul>
<li>updated version number and added some clarification to the README.txt</li>
<li>removed the ECAT6 tests</li>
 </ul>

<h3>Other changes to tests</h3>
<p>None</p>

<H2>What's new for developers (aside from what should be obvious
from the above):</H2>

<h3>Major bugs fixed</h3>
<p>None</p>

<h3>New functionality</h3>
<ul>
<li>BasicCoordinate, VectorWithOffset and Array now have new members at() (checking for out-of-range index access) and empty() (like std::vector).
</li>
<li>error() and warning() now support using boost::format. The old (unsafe) printf-like syntax will be removed in 
a future version.
</ul>

<h3>Other code changes</h3>
<ul>
<li>removed <tt>_scanner_sptr</tt> member of <tt>MultipleProjData</tt>, 
added a few <tt>set_*()</tt> functions.</li>
<li><tt>error</tt> and <tt>warning</tt> have now an additional version using only 1 argument that writes to stream, i.e. like info()</li>
<li><tt>PoissonLogLikelihoodWithLinearModelForMean</tt>:
	added get/set pair for (sub)sensitivity_filename(s)</li>
<li><tt>OSMAPOSLReconstruction:</tt>
	overloading <tt>IterativeReconstruction::get_objective_function()</tt>
     with a return-type specifying it'll always be a Poisson log likelihood.</li>
<li>no longer have <tt>using std::vector</tt> and/or <tt>using std::ios</tt> etc in some .h files</li>
<li> A few minor changes for SWIG compatibility</li>
</ul>
</body>

</html>

