<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <title>Summary of changes in STIR release 2.4 (dated 31/07/2013)</title>
  </head>

  <body>
    <h1>Summary of changes in STIR release 2.4 (dated 31/07/2013)</h1>

<p>This release was mostly prepared by Charalampos Tsoumpas (King's College London). 
Special thanks to Irene Polycarpou for her rigorous validation and the 
invaluable help while debugging the code. Minor changes and bug fixes by Kris Thielemans 
(Algorithms and Software Consulting Ltd, University College London).</p>


<ul>

<h2> Summary for end users (also to be read by developers)</h2>
<h3>Important bug fixes</h3>
<ul>
<li>corrected BUG in memory allocation in InputStreamWithRecords (introduced in STIR 2.3).
This potentially affected all list mode handling.
</li>
</ul>

<h3>New functionality</h3>
<ul>
<li>Addition of motion utilities and an objective function for reconstructing a single motion corrected
image from gated projection data.</li>
<li>Conversion routines for reading/writing GIPL images.</li>
<li>A conversion routine to  create Interfile data from raw GATE projection data output.</li>
<li>4 new scanners: Siemens mMR, nanoPET (Mediso), HYPER (HyperImage FP7 project), PANDA (KCL internal).</li>
<li>Added "-t tolerance" option to compare_projdata.</li>
<li>Python support:
  <ul>
    <li>Added input files for python examples.</li>
    <li>Added test scripts using py.test (these need to be run manually at present)</li>
    <li>Added ByteOrder, NumericType, Segment, TimedObject, 
            InterfileOutputFileFormat, ECAT7OutputFileFormat (applicable to all swig interfaces)</li>
    <li>Added get_num_dimensions() and shape() to Array</li>
  </ul>
</li>
</ul>

<h3>Changed functionality</h3>
<ul>
<li><tt>PoissonLogLikelihoodWithLinearKineticModelAndDynamicProjectionData</tt> now defaults to using all segments (to be consistent with other 
objective functions)</li>
</ul>

<h3>Build system</h3>
<ul>
<li> 
Using <a href="http://www.cmake.org">CMake</a> is now recommended (see the wiki). Some options
such as shared libraries and SWIG support can only be enabled when using CMake. Hand-crafted project files
for Visual Studio are no longer distributed.
</li>
<li>use CMake FOLDER properties to group projects in
  Visual Studio (and XCode etc?), needs CMake 2.8.3</li>
<li> disable export of cmake settings as it's no longer supported by CMake</li>
</ul>


<h3>Known problems</h3>
<ul>
<li>On Windows, using shared libraries fails. We need to sort out dependencies between libraries to fix this.</li>
<li>This release is known to fail when both MPI and shared libraries are enabled. You will see linking errors in all non_MPI executables.</li>
<li>The recon_test_pack routines fail with the MPI version. A work-around is to prefix the reconstruction executables with <tt>mpirun -np 4</tt> or so).</li>
<li>The MPI version of OSMAPOSL and OSSPS cannot compute the value of the objective function. Therefore, setting the
<tt>report objective function values interval</tt> keyword to 1 will cause a crash.</li>
<li>ECAT6 is no longer supported</li>
<li>The interpolating back-projector still gives problems in the centre of the images
on some architectures/compiler/optimisation settings. We recommend to use the ray-tracing
matrix (with additional rays) instead.</li>
<li>When using <code>GRAPHICS=X</code> (i.e. on Unix/Linux/MacOSX) the window displaying
the bitmaps is sometimes empty. This might depend on your X server settings.
This affects <tt>manip_image</tt>, <tt>manip_projdata</tt> and <tt>display_projdata</tt>. 
We have currently no work-around (aside from using <code>GRAPHICS=PGM</code> or
<tt>stir_write_pgm</tt>).
</li>
</ul>


<h3>Minor bug fixes</h3>
<ul>
<li>fixed possible race-condition in OPENMP version of FBP2D (but it's still too slow to be practical)</li>
<li>list_lm_events: reset output-format to decimal after printing a gating event (previously all
  remaining output was in hex); also added newline after printing an unknown event.</li>
<li>fix a (nearly irrelevant) bug in reading a file signature that lead to uninitialised memory being 
  returned if the file size was shorter than 1024 bytes (but that doesn't really happen for normal files).</li>
<li>A few error messages in ECAT IO would actually crash as opposed to writing a decent message.</li>
<li>A few changes to the CMakeLists.txt files for cmake clarifying dependencies
between libraries. This makes shared libraries better suppported, but there are still circular dependencies. This doesn't seem to create trouble on most systems,
but makes shared libraries fail on some (e.g. msys on windows).</li>
</li>
</ul>

<h3>Documentation changes</h3>
<ul>
<li>Added documentation on new features, more on using CMake, etc</li> 
<li>The Wiki expands more and more, so use it in addition to the provided PDFs.
</li>
 </ul>

<h3>recon_test_pack changes</h3>
<ul>
<li>updated version number and added some clarification to the README.txt</li>
<li>added a test script for the motion version</li>
<li>added a test script for the scatter simulation</li>
<li>relaxed test for OSSPS in <tt>run_tests.sh</tt> to avoid problem of outer rim voxels on cygwin (and others?)</li>
<li>small updates to test scrips, giving early exit if a STIR executable not found and feedback which STIR executable is being used</li>
 </ul>

<h3>Other changes to tests</h3>
<ul>
<li>added a test for warping images</li>
<li>changed IO tests in test_Array to accomodate for gcc 4.8.1 numerical precision (flagged and tested by Justin Mikell)</li>
</ul>

<H2>What's new for developers (aside from what should be obvious
from the above):</H2>

<h3>Major bugs fixed</h3>
<ul>
<li>corrected BUG in memory allocation in InputStreamWithRecords (introduced in STIR 2.3).
This potentially affected all list mode handling.
</li>
</ul>

<h3>New functionality</h3>
<ul>
<li>Lots of warping/motion stuff!</li>
</ul>

<h3>Other code changes</h3>
<ul>
<li>modifications to the scatter estimation code changes to be able to run multiple scatter
  simulation from the same ScatterEstimation object (possibly re-using the
  cache). Results are identical.</li>
<li>removed a few <tt>using std::cout</tt> (and other items in the <tt>std</tt> namespace) from some include files
as this created problems on some compilers. This might affect your code if it relied on these <tt>using</tt> statements.
</li>
<li>replaced a few output lines to <tt>std::cerr</tt> with calls to <tt>stir::info</tt> (still many more to do).</li>
</ul>

<h3>Build system</h3>
<ul>
<li> changes to test-macros for CMake to allow linking without the registries (such as
  IO_registries), speeding up the linking process of some tests.</li>
<li> fixes for MPI. The CMake files might now work on more MPI platforms.</li>
</ul>
</body>

</html>

