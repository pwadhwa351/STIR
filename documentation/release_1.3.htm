<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <title>Summary of changes in STIR release 1.3 (dated 25/11/2004)</title>
  </head>

  <body>
    <h1>Summary of changes in STIR release 1.3 (dated 25/11/2004)</h1>

<p>
Release of 2D FBP and 3DRP.<br>
Aside from that, this is mostly an optimisation and bug-fix release, together 
with some code changes for gcc 3.4. 

</p>
<p>Nearly all work on this update was by Kris Thielemans (but FBP2D and
FBP3DRP originate in PARAPET days). <br>
Thanks to Fr&eacute;d&eacute;ric Schoenahl and Hagen Moelle for contributing
patches for gcc 3.4, and Fr&eacute;d&eacute;ric
Schoenahl, Hagen Moelle, Katie Dinelle and Oliver Nix for  testing.
<br>
Also many thanks to M&eacute;rence Sibomana for updating the LLN ecat matrix library to
iron out some problems with STIR.
</p>
<h2> Summary for endusers (also to be read by developers)</h2>

<h3>New utilities</h3>
<ul>
<li> FBP2D, our implementation of the Filtered Back Projection algorithm.</li>
<li> FBP3DRP, our implementation of the 3D Reprojection algorithm.</li>
</ul>


<h3>Bugs removed that affect users</h3>
<ul>
<li> poisson_noise did not work properly in STIR 1.2
</li>
<li> filled in patient_orientation in ECAT headers. Without it, some display
programs reorient the image.
</li>
<li> on some systems there were problems with synchronising input and output
when asking questions to the user via a terminal.
<li> fixed bug in ECAT6 IO causing wrong reading/writing of float values in the headers on some systems with recent compilers. In addition, ECAT6 IO
should now work on 64-bit systems.  Warning: bugs existed since PARAPET days 
(or indeed before that) but would have appeared when doing 'make run_tests'.
</li>
</ul>

<h3>Code changes that influence your results</h3>
<ul>
<li>Updated bin-size and scanner radius for the Advance as suggested by Roman Krais
quite a while ago...</li>
<li>
Interfile parsing of sinogram headers now has a different guessing routine
if "originating system" is not recognised. However, as long as all scanner parameters
are specified, nothing should change.
</li>
<li>when reading ECAT7 sinograms, and the bin_size from the header and the
 STIR info do not match, the header info is now used (in previous
 version, it was the STIR info). This should have little impact,
 as for normal scanners, they are the same.  
 </li>
<li>lm_to_projdata: changed naming convention from
  fgbd to fgdb according to standard CTI rules</li>
</ul>
 
<h3>New functionality of existing utilities</h3>
<ul>
<li> added support for Discovery LS and ST</li>
<li> stir_math: added option --output-format to specify output file format for images 
</li>
<li> list_ROI_values: can now have more than 1 ROI (with names) in the .par file, can output CV
</li>
<li> generate_image: added keys "X number of samples
  to take per voxel" etc 
</li>
<li> get_time_frame_info.cxx: added --mid-time option,
  added possibility to list more than 1 frame (while keeping
    command line compatible), added  --num-time-frames option
</li>
<li>recon_test/bcktest.cxx: added more command line arguments,
  including parsing the   projector from a file, changing the
    output filename etc.  WARNING: the command line parameters are
      INCOMPATIBLE with before.
</li>
</ul>


<h3>Code changes that do not influence your results</h3>
<ul>
<li>interactive asking of parameters by OSMAPOSL (and FBP2D) no
longer crashes.
<li>When directly reading ECAT7 files, STIR no longer generates
a corresponding Interfile header for it. This avoids problems with
read-only directories and potential race-conditions for multiple STIR
utilities reading the same file.
</li>
<li> conv_to_ecat7 now produces ECAT7 sinograms with 2-byte ints as data-type
(except when writing attenuation files). This is slower
but allows a larger number of frames.
</li>
<li> scanner name matching now ignores case and white space
</li>
</ul>

<h3>Installation procedure changes</h3>
<ul>
<li>
Makefiles slightly changed to allow compiling with Visual Studio's
command line compilers (set CXX=cl). Changed the EXTRA_OPT Makefile option to EXTRA_CFLAGS,
and similar changes to make things more logical (see User's Guide).
</li>
</ul>


<h3>Documentation changes</h3>
<ul>
<li> doxygen documentation has expanded and improved, 
also because we are now using
doxygen 1.3.9. In particular, the include statements in the
documentation generated by doxygen are now correct.
</li>
<li>Nearly all 'overview' documentation is now written in LaTeX format, as
opposed to RTF. Aside from some nice features in the PDF files, this should
allow easier integration with doxygen at a later stage. </ul>

<h3>recon_test_pack changes</h3>
<ul>
</ul>

<H2>What's new for developers (aside from what should be obvious
from the above):</H2>

<h3>New functionality</h3>
<ul>
<li> added code for FFT, see include/stir/numerics/fourier.
This code is tested indirectly in test_ArrayFilter (by comparing withordinary convolution).
Another test program is not yet included
in the distribution as it relies on comparing results with the Numerical
Recipes FFT code, which we cannot redistribute.  
</li>
<li> some more functions for coordinates and array indexing. see the ChangeLog

</ul>
<h3>Other code changes</h3>
<ul>
<li> more tests: ProjDataInfo, symmetries (used for 
forward and back projection), ArrayFilter, ROIs, VAX float conversions...
</li>
<li>major changes in the VectorWithOffset class (and a bit in Array). The big
difference is now that you can resize (also make it smaller, we had only
grow() before) and reserve capacity, similar to std::vector. (tested for
memory leaks on Linux using http://valgrind.kde.org/)
</li>
<li> changed full array iterators a little bit to allow for more compiler
optimisations.
</li>
<li> sorted out most (but I guess not all) bugs in the LOR classes.
</li>
<li>bug fixes in Shape3D (see ChangeLog). However, 2 bugs compensated
eachother such that results were correct anyway.
</li> 
<li>changes to symmetries and the ray tracing projection matrix to work in
more general cases.
</li>
<li> new Array IO being introduced, allowing for more flexibility and uses less
temporary memory. Replace all usage of Array:write_data with IO/write_data
(and similar for read_data).
</li>
<li>more functionality and/or new utilities round(), modulo(), norm() etc
</li>
<li>add preliminary code for having projectors by 'densel' (i.e. voxel 
but for general DiscretisedDensity) as opposed to by Bin.
</li>
<li>major changes in Scanner.cxx. Most of interest is that block/bucket info is
added for many scanners. This will be at present only be used when using 
an ECAT7 normalisation file.
</li>
<li>sorted out problem in Makefile with auto-generation of dependencies (on include files) if
you are not using gcc 3.*. 
</li>
<li>changed test.mk mechanism to make it far easier to add test programs. Also,
tests are now performed as different targets, so "make -k run_tests" will
run all tests, regardless of any failures.
</li>
</ul>
</body>

</html>

