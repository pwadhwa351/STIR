OSSPSParameters :=
; example file for OSSPS using a quadratic prior
; this is a minimal file. check other sample files and doc for more options

objective function type:= PoissonLogLikelihoodWithLinearModelForMeanAndProjData
PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=

input file := test.hs
; if disabled, defaults to maximum segment number in the file
maximum absolute segment number to process := 4
; see User's Guide to see when you need this
zero end planes of segment 0:= 0

projector pair type := Matrix
  Projector Pair Using Matrix Parameters :=
  Matrix type := Ray Tracing
  Ray tracing matrix parameters :=
  End Ray tracing matrix parameters :=
  End Projector Pair Using Matrix Parameters :=

; put normalisation (and attenuation) here
; Bin Normalisation type := From ProjData
	;   Bin Normalisation From ProjData :=
	;     normalisation projdata filename:= norm.hs
	; End Bin Normalisation From ProjData:=

; specify additive projection data to handle randoms or so
; see User's Guide for more info
additive sinogram := 0


; if the next parameter is disabled, 
; the sensitivity will be computed
;sensitivity filename:= sens.hv


; here comes the prior stuff

prior type := quadratic
  Quadratic Prior Parameters:=
  penalisation factor := 1
  ; next can be used to set weights explicitly. Needs to be a 3D array (of floats).
  ' value of only_2D is ignored
  ; following example uses 2D 'nearest neighbour' penalty
  weights:={{{0,1,0},{1,0,1},{0,1,0}}}
  ; use next parameter to specify an image with penalisation factors (a la Fessler)
  ; see class documentation for more info
  ; kappa filename:=
  ; use next parameter to get gradient images at every subiteration
  ; see class documentation
  ; gradient filename prefix:= 
  END Quadratic Prior Parameters:=

end PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=

initial estimate:= some_image
; you could enable this when you read an initial estimate with negative data, 
; although OSSPS does not need it
; enforce initial positivity condition:=0

output filename prefix := test_QP
number of subsets:= 12
number of subiterations:= 24
save estimates at subiteration intervals:= 12

; here start OSSPS specific values

; values to use for the 'precomputed denominator'
  ; if you do not specify the following keyword, the 'precomputed denominator'
  ; will be computed automatically (and saved)
  ; use the following if you have it already (e.g. from previous run)
  ; note: setting the value to 1 will use an images full of ones (which is not a good idea!)
  ; precomputed denominator := my_precomputed_denominator.hv

; specify relaxation scheme
; lambda = relaxation_parameter/ (1+relaxation_gamma*(subiteration_num/num_subsets)
relaxation parameter := 1
relaxation gamma:=.1

; you can give an upper bound on the image values.
; lower bound is always zero.
;upper bound:= 1
END :=
